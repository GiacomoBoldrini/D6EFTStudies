# ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ----#
#                                                                 #
#         CONFIG FILE TO CREATE INPUTS TO mkDataCards             #
#                                                                 #
# ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ----#

[general]
luminosity = 100
sample = SSWW
outfolder = SSWW_to_Latinos
outfile = cW_cHWB.root

[ntuples]

folder = /afs/cern.ch/user/g/govoni/myeos/samples/2019_EFT/SSWW/ntuples

[eft]
# This secction suppose a naming convention as output from the D6EFTStudies lhe routine
# for example a file name is: ntuple_SSWW_cHW_QU.root. 
# "operators" is a list of op names such as cHW while "component" refer to QU for 
# quadratic while LI for the linear term, IN for interference or SM ( superseeds the op field). 
# * retireves every possible file.
# The "model" fields specifies the way in which histograms will be merged (e.g. SM+LI+QU etc)

operators = cW, cHWB
models = EFTNeg,EFTNeg-alt

[cuts]
names = -
expr = -
categories = -

[supercuts]
expr = -

[variables]
histonames = histo_SSWW
treenames = met, mll
bins = 50,50
xrange = [0:200], [0:500]
xaxis = *
fold = 0

# This part generates some dummy files 
# in order to work with the Latinos framework.
# They should be edited and contain only minimal information.

[d_structure]
makeDummy = True

[d_samples]
name = []
weight = ''
weights = []
filesperjob = 2
makeDummy = True

[d_variables]
xaxis = "MET [GeV]", "m_{ll} [GeV]"
name = auto
range = auto
fold = 0

makeDummy = True

[d_plot]
colors = 400,851,921,418,857,617,810,409,418,921,851,400,851,921,418,857,617,810,409,418,921,851
makeDummy = True

[d_alias]
makeDummy = True

[d_cuts]
makeDummy = True

[d_configuration]
tag = "SSWW_cW_cHWB"
aliasesFile = auto
variablesFile = auto
cutsFile = auto
samplesFile = auto
plotFile = auto
lumi = 100
outputDirPlots = "plots"
outputDirDatacard = "datacards"
structureFile = auto
nuisancesFile = auto
makeDummy = True

[d_nuisances]
propagate = True
defname = lumi
name = lumi
#convention...
# FOr each nuisance you have to provide a sample list and a value
# they have to be in format [sample1:value1|sample2:value2|...] , [...]
# where the number of list equals the number of nuisances
samples = [sm:1.002]
types = lnN
makeDummy = True

